//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4959
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MEditor.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("微软雅黑, 10.5pt")]
        public global::System.Drawing.Font font {
            get {
                return ((global::System.Drawing.Font)(this["font"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color color {
            get {
                return ((global::System.Drawing.Color)(this["color"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("74, 82, 90")]
        public global::System.Drawing.Color bgcolor {
            get {
                return ((global::System.Drawing.Color)(this["bgcolor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"body,h1,h2,h3,h4,h5,h6,hr,p,blockquote,dl,dt,dd,ul,ol,li,pre,form,fieldset,legend,button,input,textarea,th,td{margin:0;padding:0;}body,button,input,select,textarea{font:12px/1 Tahoma,Helvetica,Arial,""\5b8b\4f53"",sans-serif;}h1{font-size:22px;}h2{font-size:21px;}h3{font-size:20px;}h4,h5,h6{font-size:100%;}address,cite,dfn,em,var{font-style:normal;}code,kbd,pre,samp,tt{font-family:""Courier New"",Courier,monospace;}small{font-size:12px;}a{text-decoration:none;}a:hover{text-decoration:underline;}abbr[title],acronym[title]{border-bottom:1px dotted;cursor:help;}q:before,q:after{content:'';}legend{color:#000;}fieldset,img{border:0;}button,input,select,textarea{font-size:100%;}table{border-collapse:collapse;border-spacing:0;}hr{border:0;height:1px;*color:#fff;}

body {
	FONT: 14px/150% Helvetica, Arial, 'Liberation Sans', FreeSans, sans-serif;
	COLOR: #333333;
	text-align: left;
	background:#fff
}
.head{ height:40px; width:100%; background:#333}
.content{margin:15px;}

.markdown_table{ border:1px solid #333;}
th,td{ line-height:27px; height:27px; padding:0 5px; border:1px solid #333}
th{ background:#999;text-align:center;color:#000}

p,li,table{font-family:""微软雅黑"";}

p,h1,h2,h3{ margin:15px 0;}
ul,ol{ padding-left:24px;}
li{ line-height:29px;}
li p{ margin:0}
.foot{height:37px; width:100%; background:#eee;border-top:1px solid #ccc;margin-top:50px;}
hr{ color:#a7a6aa; height:1px;}
a{ color:#0064b1;text-decoration:underline}
a:hover{color:#ff6700}")]
        public string css {
            get {
                return ((string)(this["css"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-8"" ?>
<configuration>
    <configSections>
        <sectionGroup name=""applicationSettings"" type=""System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"" >
            <section name=""MEditor.Properties.Settings"" type=""System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"" requirePermission=""false"" />
        </sectionGroup>
    </configSections>
    <applicationSettings>
        <MEditor.Properties.Settings>
            <setting name=""font"" serializeAs=""String"">
                <value>{font}</value>
            </setting>
            <setting name=""color"" serializeAs=""String"">
                <value>{color}</value>
            </setting>
            <setting name=""bgcolor"" serializeAs=""String"">
                <value>{bgcolor}</value>
            </setting>
            <setting name=""css"" serializeAs=""String"">
                <value>{css}</value>
            </setting>
            <setting name=""extfile"" serializeAs=""String"">
                <value>{extfile}</value>
            </setting>
        </MEditor.Properties.Settings>
    </applicationSettings>
</configuration>")]
        public string appconfig {
            get {
                return ((string)(this["appconfig"]));
            }
            set {
                this["appconfig"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".txt|.js|.htm|.xml|.as|.log|.php|.cs")]
        public string extfile {
            get {
                return ((string)(this["extfile"]));
            }
        }
    }
}
